<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.redhat.rhn.domain.monitoring.Probe" table="rhn_probe"
        discriminator-value="notvalidabstract">
        <id name="id" type="long" column="recid">
            <generator class="sequence">
                <param name="sequence">RHN_PROBES_RECID_SEQ</param>
            </generator>
        </id>
        <discriminator column="probe_type" type="java.lang.String" insert="false"/>
        <property name="description" column="description" not-null="true"
            type="string" length="255" access="field"/>
        <property name="notifyCritical" column="notify_critical" type="character"
            length="1" access="field"/>
        <property name="notifyWarning" column="notify_warning" type="character"
            length="1" access="field"/>
        <property name="notifyUnknown" column="notify_unknown" type="character"
            length="1" access="field"/>
        <property name="notifyRecovery" column="notify_recovery" type="character"
            length="1" access="field"/>
        <property name="notificationIntervalMinutes"
            column="notification_interval_minutes" not-null="true" type="long"
            access="field"/>
        <property name="checkIntervalMinutes" column="check_interval_minutes"
            not-null="true" type="long" access="field"/>
        <property name="retryIntervalMinutes" column="retry_interval_minutes"
            not-null="true" type="long" access="field"/>
        <property name="maxAttempts" column="max_attempts" type="long" access="field"/>
        <property name="lastUpdateUser" column="last_update_user" type="string"
            length="40" access="field"/>
        <property name="lastUpdateDate" column="last_update_date"
            type="timestamp" access="field"/>
        <many-to-one name="type"
            class="com.redhat.rhn.domain.monitoring.ProbeType" not-null="true"
            access="field">
            <column name="probe_type"/>
        </many-to-one>
        <many-to-one name="org" column="customer_id"
            class="com.redhat.rhn.domain.org.Org"
            not-null="true" access="field"/>
        <many-to-one name="command"
            class="com.redhat.rhn.domain.monitoring.command.Command"
            not-null="true" access="field">
            <column name="command_id"/>
        </many-to-one>
        <many-to-one name="contactGroup"
            class="com.redhat.rhn.domain.monitoring.notification.ContactGroup"
            not-null="false" access="field">
            <column name="contact_group_id"/>
        </many-to-one>
        <one-to-one name="state"
            class="com.redhat.rhn.domain.monitoring.ProbeState"
            cascade="all" constrained="false" access="field"/>
        <set name="probeParameterValues" cascade="all"
            lazy="true" inverse="true" access="field">
            <key column="probe_id"/>
            <one-to-many
                class="com.redhat.rhn.domain.monitoring.ProbeParameterValue"/>
        </set>
        <subclass name="com.redhat.rhn.domain.monitoring.ServerProbe"
            discriminator-value="check">
            <set name="templateProbes" lazy="true"
                table="rhn_service_probe_origins" cascade="none">
                <key column="service_probe_id"/>
                <many-to-many column="origin_probe_id"
                    class="com.redhat.rhn.domain.monitoring.TemplateProbe"/>
            </set>
            <join table="RHN_CHECK_PROBE" inverse="false" optional="false">
				<key column="probe_id"/>
                <many-to-one name="server" column="host_id"
                    class="com.redhat.rhn.domain.server.MonitoredServer"/>
                <many-to-one name="satCluster" column="sat_cluster_id"
                    class="com.redhat.rhn.domain.monitoring.satcluster.SatCluster"/>
            </join>
        </subclass>
        <subclass name="com.redhat.rhn.domain.monitoring.TemplateProbe"
            discriminator-value="suite">
            <!-- Tried to get this to work using a joined-subclass
            but failed and ended up having to do a many-to-many that
            always returns one value.  Nasty, but this schema wasnt
            setup well for hibernate.  See TemplateProbe.getSuite()
            for convenience method -->
            <set name="probeSuites"
                table="rhn_check_suite_probe" cascade="none" inverse="true"
                lazy="true">
                <key column="probe_id"/>
                <many-to-many column="check_suite_id"
                    class="com.redhat.rhn.domain.monitoring.suite.ProbeSuite"/>
            </set>
            <bag name="serverProbes"
                table="rhn_service_probe_origins" cascade="all" lazy="true">
                <key column="origin_probe_id"/>
                <many-to-many column="service_probe_id"
                    class="com.redhat.rhn.domain.monitoring.ServerProbe"/>
            </bag>
        </subclass>
    </class>
    <query name="Probe.findByIdandOrgId">
        <![CDATA[from com.redhat.rhn.domain.monitoring.Probe as p where p.id = :pid and CUSTOMER_ID = :orgId]]>
    </query>
</hibernate-mapping>
